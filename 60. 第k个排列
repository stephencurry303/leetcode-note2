#第一个是第n位的每种数字有(n-1)!种情况，所以可以用k/(n-1)!确定选取数字的位置，k%(n-1)!则是取出没有用于n位选取数字的剩余数，
#第二点就是每用完一个数字需要删除掉其在数组对应的数字，避免重复选取
class Solution:
    def getPermutation(self, n: int, k: int) -> str:
        z = 1
        l = []
        for i in range(1,n+1):
            #1.
            z = z*i #计算排列数量
            l.append(i)#生成排列所用列表
        s = ""
        #2.
        k = k-1#第k大数字表达
        while n>0:
            #3.
            z = z/n#计算当前位置每种数字的情况个数
            #4.
            h = int(k/z)#当前位置所需数字的位置
            s += str(l[h])
            del l[h]#删除已用数字
            k%=z#取出剩余的数
            n -= 1#移位
        return s
